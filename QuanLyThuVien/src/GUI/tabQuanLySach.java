/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import CRUD.ISachCRUD;
import CRUD.SachCRUD;
import Exception.InvalidDataException;
import Logic.LogicSach;
import Object.Sach;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import com.formdev.flatlaf.FlatLightLaf;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.time.LocalDate;
/**
 *
 * @author HoCanhQuy
 */
public class tabQuanLySach extends javax.swing.JPanel {

    private DefaultTableModel tableModel;
    private int selectedRow = -1;
    private int selected = -1;
    private ISachCRUD sach = new SachCRUD();
    private ArrayList<Sach> dsSach;
    private String[] listTinhTrang = {"Đang hoạt động", "Không hoạt động"};
    public tabQuanLySach() {
        initComponents();
        layDuLieu();
        tbHienThi.setShowGrid(true);
        tbHienThi.setGridColor(new Color(224, 224, 224));
        FlatSVGIcon iconAdd = new FlatSVGIcon("Images/Add.svg", 25, 25);
        FlatSVGIcon iconDelete = new FlatSVGIcon("Images/delete.svg", 25, 25);
        FlatSVGIcon iconEdit = new FlatSVGIcon("Images/edit.svg", 25, 25);
        FlatSVGIcon iconRefresh = new FlatSVGIcon("Images/refresh.svg", 22, 22);
        FlatSVGIcon iconExit = new FlatSVGIcon("Images/exit.svg", 25, 25);
        FlatSVGIcon iconSearch = new FlatSVGIcon("Images/search.svg", 18, 18);
        btnThem.setIcon(iconAdd);
        btnXoa.setIcon(iconDelete);
        btnSua.setIcon(iconEdit);
        btnLamMoi.setIcon(iconRefresh);
        btnThoat.setIcon(iconExit);
        btnTimKiem.setIcon(iconSearch);
    }
    public void layDuLieu(){
        tableModel = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; 
            }
        };
        tableModel.addColumn("Mã sách");
        tableModel.addColumn("Tên sách");
        tableModel.addColumn("Tác giả");
        tableModel.addColumn("Thể Loại");
        tableModel.addColumn("Nhà xuất bản");
        tableModel.addColumn("Năm xuất bản");
        tableModel.addColumn("Số lượng");
        tableModel.addColumn("Tình trạng");
        
        sach = new SachCRUD();
        dsSach = sach.getDsSach();
        String tinhTrang = "";
        
        
        Set<String> set = new HashSet<>();
        for(Sach s: dsSach){
            set.add(s.getTheLoai());
            if(s.getTinhTrang() == 0){
                tinhTrang = "Không hoạt động";
            }
            else{
                tinhTrang = "Đang hoạt động";
            }
            tableModel.addRow(new Object[]{
                s.getMaSach().trim(),
                s.getTenSach().trim(),
                s.getTacGia().trim(),
                s.getTheLoai(),
                s.getNhaXuatBan(),
                s.getNamXuatBan(),
                s.getSoLuong(),
                tinhTrang
            });
        }
        tbHienThi.setModel(tableModel);
        cbNamXuatBan.removeAllItems();
        LocalDate date = LocalDate.now();
        for(int i = date.getYear(); i >= 1900; i--){
            cbNamXuatBan.addItem(Integer.toString(i));
        }
        
        cbTheLoai.removeAllItems();
        cbTheLoai.addItem("Chọn hoặc nhập thể loại");
        for(String s:set){
            cbTheLoai.addItem(s);
        }
        
        cbTinhTrang.removeAllItems();
        for(String s:listTinhTrang){
            cbTinhTrang.addItem(s);
        }
        
        cbTimKiem.removeAllItems();
        cbTimKiem.addItem("Tìm kiếm theo mã sách");
        cbTimKiem.addItem("Tìm kiếm theo tên sách");
        cbTimKiem.addItem("Tìm kiếm theo tác giả");
        cbTimKiem.addItem("Tìm kiếm theo thể loại");
        cbTimKiem.addItem("Tìm kiếm theo nhà xuất bản");
        cbTimKiem.addItem("Tìm kiếm những sách đang hoạt động");
        cbTimKiem.addItem("Tìm kiếm những sách không hoạt động");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnThongTinSach = new javax.swing.JPanel();
        lbMaSach = new javax.swing.JLabel();
        lbTenSach = new javax.swing.JLabel();
        lbTacGia = new javax.swing.JLabel();
        lbTheLoai = new javax.swing.JLabel();
        lbNhaXuatBan = new javax.swing.JLabel();
        lbSoLuong = new javax.swing.JLabel();
        lbNamXuatBan = new javax.swing.JLabel();
        lbTrangThai = new javax.swing.JLabel();
        txtMaSach = new javax.swing.JTextField();
        txtTenSach = new javax.swing.JTextField();
        txtTacGia = new javax.swing.JTextField();
        cbTheLoai = new javax.swing.JComboBox<>();
        txtNhaXuatBan = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JSpinner();
        cbNamXuatBan = new javax.swing.JComboBox<>();
        cbTinhTrang = new javax.swing.JComboBox<>();
        pnTimKiem = new javax.swing.JPanel();
        txtNoiDungTK = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        lbTimKiem = new javax.swing.JLabel();
        cbTimKiem = new javax.swing.JComboBox<>();
        pnChucNang = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbHienThi = new javax.swing.JTable();

        pnThongTinSach.setBackground(new java.awt.Color(255, 255, 255));
        pnThongTinSach.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin chi tiết", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        lbMaSach.setText("Mã sách:");

        lbTenSach.setText("Tên sách:");

        lbTacGia.setText("Tác giả:");

        lbTheLoai.setText("Thể loại:");

        lbNhaXuatBan.setText("Nhà xuất bản:");

        lbSoLuong.setText("Số lượng:");

        lbNamXuatBan.setText("Năm xuất bản:");

        lbTrangThai.setText("Tình trạng:");

        txtMaSach.setEditable(false);
        txtMaSach.setBackground(new java.awt.Color(204, 204, 204));

        cbTheLoai.setEditable(true);
        cbTheLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Giáo Trình", "Tài liệu học tập" }));

        cbNamXuatBan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn năm xuất bản" }));

        cbTinhTrang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "0" }));

        javax.swing.GroupLayout pnThongTinSachLayout = new javax.swing.GroupLayout(pnThongTinSach);
        pnThongTinSach.setLayout(pnThongTinSachLayout);
        pnThongTinSachLayout.setHorizontalGroup(
            pnThongTinSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThongTinSachLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pnThongTinSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNamXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNhaXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(pnThongTinSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbNamXuatBan, javax.swing.GroupLayout.Alignment.LEADING, 0, 241, Short.MAX_VALUE)
                    .addComponent(txtNhaXuatBan, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbTheLoai, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTenSach)
                    .addComponent(txtTacGia)
                    .addComponent(cbTinhTrang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtMaSach))
                .addGap(29, 29, 29))
        );
        pnThongTinSachLayout.setVerticalGroup(
            pnThongTinSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThongTinSachLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnThongTinSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbMaSach))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnThongTinSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTenSach))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnThongTinSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(pnThongTinSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTheLoai))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnThongTinSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNhaXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNhaXuatBan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnThongTinSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnThongTinSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbNamXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNamXuatBan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnThongTinSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTrangThai))
                .addGap(10, 10, 10))
        );

        pnTimKiem.setBackground(new java.awt.Color(255, 255, 255));
        pnTimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nhập thông tin tìm kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        txtNoiDungTK.setForeground(new java.awt.Color(153, 153, 153));
        txtNoiDungTK.setText("Nhập nội dung tìm kiếm");
        txtNoiDungTK.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNoiDungTKFocusGained(evt);
            }
        });

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        lbTimKiem.setText("Tìm kiếm theo:");

        cbTimKiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tìm kiếm theo mã sách", "Tìm kiếm theo tên sách" }));

        pnChucNang.setBackground(new java.awt.Color(255, 255, 255));
        pnChucNang.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức năng khác", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        btnThem.setText("Thêm sách");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa sách");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xoá sách");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnChucNangLayout = new javax.swing.GroupLayout(pnChucNang);
        pnChucNang.setLayout(pnChucNangLayout);
        pnChucNangLayout.setHorizontalGroup(
            pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnChucNangLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(btnThoat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(117, 117, 117))
            .addGroup(pnChucNangLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40))
        );
        pnChucNangLayout.setVerticalGroup(
            pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChucNangLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa))
                .addGap(18, 18, 18)
                .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSua)
                    .addComponent(btnLamMoi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnThoat)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnTimKiemLayout = new javax.swing.GroupLayout(pnTimKiem);
        pnTimKiem.setLayout(pnTimKiemLayout);
        pnTimKiemLayout.setHorizontalGroup(
            pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTimKiemLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnTimKiemLayout.createSequentialGroup()
                        .addComponent(lbTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbTimKiem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTimKiemLayout.createSequentialGroup()
                        .addComponent(txtNoiDungTK, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTimKiem))
                    .addComponent(pnChucNang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29))
        );
        pnTimKiemLayout.setVerticalGroup(
            pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTimKiemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTimKiem)
                    .addComponent(cbTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNoiDungTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh Sách", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        tbHienThi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã sách", "Tên sách", "Tác giả", "Thể  loại", "Nhà xuất bản", "Năm xuất bản", "Số lượng", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbHienThi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHienThiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbHienThi);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnThongTinSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnThongTinSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 28, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNoiDungTKFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNoiDungTKFocusGained
        // TODO add your handling code here:
        if(txtNoiDungTK.getText().equals("Nhập nội dung tìm kiếm")){
            txtNoiDungTK.setText("");
            txtNoiDungTK.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtNoiDungTKFocusGained

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        String noiDungTK;
        TableRowSorter sorter = new TableRowSorter(tableModel);
        tbHienThi.setRowSorter(sorter);
        if(cbTimKiem.getSelectedItem().equals("Tìm kiếm theo mã sách")){
            if(txtNoiDungTK.getText().equals("") || txtNoiDungTK.getText().equals("Nhập nội dung tìm kiếm")){
                JOptionPane.showMessageDialog(this, "Vui lòng nhập thông tin tìm kiếm");
                return;
            }
            noiDungTK = txtNoiDungTK.getText();
            sorter.setRowFilter(RowFilter.regexFilter("^" + Pattern.quote(noiDungTK)+ "$", 0));
        }
        if(cbTimKiem.getSelectedItem().equals("Tìm kiếm theo tên sách")){
            if(txtNoiDungTK.getText().equals("") || txtNoiDungTK.getText().equals("Nhập nội dung tìm kiếm")){
                JOptionPane.showMessageDialog(this, "Vui lòng nhập thông tin tìm kiếm");
                return;
            }
            noiDungTK = txtNoiDungTK.getText();
            sorter.setRowFilter(RowFilter.regexFilter("^" + Pattern.quote(noiDungTK)+ "$", 1));
        }
        if(cbTimKiem.getSelectedItem().equals("Tìm kiếm theo tác giả")){
            if(txtNoiDungTK.getText().equals("") || txtNoiDungTK.getText().equals("Nhập nội dung tìm kiếm")){
                JOptionPane.showMessageDialog(this, "Vui lòng nhập thông tin tìm kiếm");
                return;
            }
            noiDungTK = txtNoiDungTK.getText();
            sorter.setRowFilter(RowFilter.regexFilter("^" + Pattern.quote(noiDungTK)+ "$", 2));
        }
        if(cbTimKiem.getSelectedItem().equals("Tìm kiếm theo thể loại")){
            if(txtNoiDungTK.getText().equals("") || txtNoiDungTK.getText().equals("Nhập nội dung tìm kiếm")){
                JOptionPane.showMessageDialog(this, "Vui lòng nhập thông tin tìm kiếm");
                return;
            }
            noiDungTK = txtNoiDungTK.getText();
            sorter.setRowFilter(RowFilter.regexFilter("^" + Pattern.quote(noiDungTK)+ "$", 3));
        }
        if(cbTimKiem.getSelectedItem().equals("Tìm kiếm theo nhà xuất bản")){
            if(txtNoiDungTK.getText().equals("") || txtNoiDungTK.getText().equals("Nhập nội dung tìm kiếm")){
                JOptionPane.showMessageDialog(this, "Vui lòng nhập thông tin tìm kiếm");
                return;
            }
            noiDungTK = txtNoiDungTK.getText();
            sorter.setRowFilter(RowFilter.regexFilter("^" + Pattern.quote(noiDungTK)+ "$", 4));
        }
        if(cbTimKiem.getSelectedItem().equals("Tìm kiếm những sách đang hoạt động")){
            noiDungTK = "Đang hoạt động";
            sorter.setRowFilter(RowFilter.regexFilter("^" + Pattern.quote(noiDungTK)+ "$", 7));
        }
        if(cbTimKiem.getSelectedItem().equals("Tìm kiếm những sách không hoạt động")){
            noiDungTK = "Không hoạt động";
            sorter.setRowFilter(RowFilter.regexFilter("^" + Pattern.quote(noiDungTK)+ "$", 7));
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:Bạn nhập thông tin chưa đầy đủ");
        try{
            String maSach;
            int id = 1;
            while (true) {
                maSach = "MS" + id;
                int dem = 0;
                for (Sach s : dsSach) {
                    if (s.getMaSach().trim().equals(maSach)) {
                        dem++;
                        break;
                    }
                }
                if (dem == 0) break;
                id++;
            }
            txtMaSach.setText(maSach);
            String tenSach = txtTenSach.getText().trim();
            String tacGia = txtTacGia.getText().trim();
            String theLoai = cbTheLoai.getSelectedItem().toString();
            String nhaXB = txtNhaXuatBan.getText().trim();
            int namXB = Integer.parseInt(cbNamXuatBan.getSelectedItem().toString());
            int soLuong = Integer.parseInt(txtSoLuong.getValue().toString());
            String tinhTrang = cbTinhTrang.getSelectedItem().toString();
            int maTinhTrang = 1;
            if(tinhTrang.trim().equals("Không hoạt động")){
                maTinhTrang = 0;
            }
            Sach sach = new Sach(maSach, tenSach, tacGia, theLoai, nhaXB, namXB, soLuong, maTinhTrang);
            LogicSach kt = new LogicSach();
            int rs = kt.themSach(sach);
            if(rs == 1){
                JOptionPane.showMessageDialog(this, "Thêm sách thành công");
                tableModel.addRow(new Object[] {
                    maSach, tenSach, tacGia, theLoai, nhaXB, namXB, soLuong, "Đang hoạt động"
                });
            }
            else{
                JOptionPane.showMessageDialog(this, "Thêm sách không thành công, lỗi không xác định");
            }
        }catch(InvalidDataException iDE){
            JOptionPane.showMessageDialog(this, iDE.getMessage());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Lỗi không xác định: " + e.getMessage());
        }

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Hãy chọn một dòng để sửa!");
            return;
        }
        try{
            String maSach = txtMaSach.getText().trim();
            String tenSach = txtTenSach.getText().trim();
            String tacGia = txtTacGia.getText().trim();
            String theLoai = cbTheLoai.getSelectedItem().toString();
            String nxb = txtNhaXuatBan.getText().trim();
            int namXB = Integer.parseInt(cbNamXuatBan.getSelectedItem().toString());
            int soLuong = Integer.parseInt(txtSoLuong.getValue().toString());
            String tinhTrang = cbTinhTrang.getSelectedItem().toString();
            int maTinhTrang = 0;
            if(tinhTrang.equals("Đang hoạt động")){
                maTinhTrang = 1;
            }
            Sach s = new Sach(maSach, tenSach, tacGia, theLoai, tinhTrang, namXB, soLuong, maTinhTrang);
            LogicSach kt = new LogicSach();
            if(kt.suaSach(s) == 1){
                JOptionPane.showMessageDialog(this, "Sửa sách thành công");
                tableModel.setValueAt(tenSach    , selectedRow, 1);
                tableModel.setValueAt(tacGia , selectedRow, 2);
                tableModel.setValueAt(theLoai , selectedRow, 3);
                tableModel.setValueAt(nxb    , selectedRow, 4);
                tableModel.setValueAt(namXB  , selectedRow, 5);
                tableModel.setValueAt(soLuong, selectedRow, 6);
                tableModel.setValueAt(tinhTrang, selectedRow, 7);
            }else{
                JOptionPane.showMessageDialog(this, "Sửa sách không thành công, lỗi không xác định");
            }
        }catch(InvalidDataException iDE){
            JOptionPane.showMessageDialog(this, iDE.getMessage());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Lỗi không xác định: " + e.getMessage());
        }

    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Hãy chọn sách cần xoá!");
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(
            this,
            "Bạn chắc chắn muốn XOÁ cuốn sách này?",
            "Xác nhận XOÁ",
            JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) return;

        String maSach = tableModel.getValueAt(selectedRow, 0).toString();
        LogicSach kt = new LogicSach();
        if(kt.xoaSach(maSach) == 1){
            JOptionPane.showMessageDialog(this, "Xoá sách thành công");
            tableModel.setValueAt("Không hoạt động", selectedRow, 7);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        txtMaSach.setText("");
        txtTenSach.setText("");
        txtTacGia.setText("");
        cbTheLoai.setSelectedIndex(0);
        txtNhaXuatBan.setText("");
        cbNamXuatBan.setSelectedIndex(0);
        txtSoLuong.setValue(0);
        cbTinhTrang.setSelectedIndex(0);
        txtNoiDungTK.setText("");
        layDuLieu();
        TableRowSorter sorter = new TableRowSorter(tableModel);
        tbHienThi.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter(""));
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnThoatActionPerformed

    private void tbHienThiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHienThiMouseClicked
        // TODO add your handling code here:
        selected = tbHienThi.getSelectedRow();
        selectedRow = tbHienThi.convertRowIndexToModel(selected);
        if (selectedRow >= 0) {
            int r = tbHienThi.convertRowIndexToModel(selectedRow);
            txtMaSach.setText(tableModel.getValueAt(r, 0).toString());
            txtTenSach.setText(tableModel.getValueAt(r, 1).toString());
            txtTacGia.setText(tableModel.getValueAt(r, 2).toString());
            cbTheLoai.setSelectedItem(tableModel.getValueAt(r, 3));
            txtNhaXuatBan.setText(tableModel.getValueAt(r, 4).toString());
            cbNamXuatBan.setSelectedItem(tableModel.getValueAt(r, 5).toString());
            txtSoLuong.setValue(tableModel.getValueAt(r, 6));
            cbTinhTrang.setSelectedItem(tableModel.getValueAt(r, 7));
        }
    }//GEN-LAST:event_tbHienThiMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbNamXuatBan;
    private javax.swing.JComboBox<String> cbTheLoai;
    private javax.swing.JComboBox<String> cbTimKiem;
    private javax.swing.JComboBox<String> cbTinhTrang;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbMaSach;
    private javax.swing.JLabel lbNamXuatBan;
    private javax.swing.JLabel lbNhaXuatBan;
    private javax.swing.JLabel lbSoLuong;
    private javax.swing.JLabel lbTacGia;
    private javax.swing.JLabel lbTenSach;
    private javax.swing.JLabel lbTheLoai;
    private javax.swing.JLabel lbTimKiem;
    private javax.swing.JLabel lbTrangThai;
    private javax.swing.JPanel pnChucNang;
    private javax.swing.JPanel pnThongTinSach;
    private javax.swing.JPanel pnTimKiem;
    private javax.swing.JTable tbHienThi;
    private javax.swing.JTextField txtMaSach;
    private javax.swing.JTextField txtNhaXuatBan;
    private javax.swing.JTextField txtNoiDungTK;
    private javax.swing.JSpinner txtSoLuong;
    private javax.swing.JTextField txtTacGia;
    private javax.swing.JTextField txtTenSach;
    // End of variables declaration//GEN-END:variables
}
