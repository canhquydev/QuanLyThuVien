/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Backup.Backup_Restore;
import CRUD.ConnectSQL;
import CRUD.INguoiMuonCRUD;
import CRUD.IPhieuMuonCRUD;
import CRUD.ISachCRUD;
import CRUD.NguoiMuonCRUD;
import CRUD.PhieuMuonCRUD;
import CRUD.SachCRUD;
import Exception.InvalidDataException;
import Logic.LogicBackupRestore;
import Object.NguoiMuon;
import Object.PhieuMuon;
import Object.Sach;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import com.microsoft.sqlserver.jdbc.SQLServerDataSource;
import java.awt.Color;
import java.sql.Connection;
import java.beans.Statement;
import java.util.*;
import java.io.*;
import java.time.*;
import javax.swing.*;
import javax.swing.table.*;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;


import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.*;
import org.jfree.data.*;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
public class tabNapDuLieu extends javax.swing.JPanel {

    private IPhieuMuonCRUD phieuMuon;
    private ArrayList<PhieuMuon> dsPhieuMuon;
    private ISachCRUD sach;
    private ArrayList<Sach> dsSach;
    private INguoiMuonCRUD nguoiMuon;
    private ArrayList<NguoiMuon> dsNguoiMuon;
    private String duongDan = "";
    private String file = "";
    public tabNapDuLieu() {
        initComponents();
        sach = new SachCRUD();
        dsSach = sach.getDsSach();
        nguoiMuon = new NguoiMuonCRUD();
        dsNguoiMuon = nguoiMuon.getDsNguoiMuon();
        phieuMuon = new PhieuMuonCRUD();
        dsPhieuMuon = phieuMuon.getDanhSachPM();
        tableChoose.setShowGrid(true);
        tableChoose.setGridColor(new Color(224, 224, 224));
        FlatSVGIcon iconView = new FlatSVGIcon("Images/viewTable.svg", 25, 25);
        FlatSVGIcon iconBackup = new FlatSVGIcon("Images/backup.svg", 18, 18);
        FlatSVGIcon iconRestore = new FlatSVGIcon("Images/restore.svg", 18, 18);
        FlatSVGIcon iconExit = new FlatSVGIcon("Images/exit.svg", 25, 25);
        btnThoat.setIcon(iconExit);
        btnDisplayTable.setIcon(iconView);
        btnWriteFile.setIcon(iconBackup);
        btnReadFile.setIcon(iconRestore);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnChiTietBang = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cbChooseTable = new javax.swing.JComboBox<>();
        btnDisplayTable = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        pnDanhSach = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableChoose = new javax.swing.JTable();
        pnBackUp = new javax.swing.JPanel();
        btnReadFile = new javax.swing.JButton();
        lbDuongDan = new javax.swing.JTextField();
        lbFile = new javax.swing.JTextField();
        btnWriteFile = new javax.swing.JButton();

        pnChiTietBang.setBackground(new java.awt.Color(255, 255, 255));
        pnChiTietBang.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin chi tiết bảng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        jLabel7.setText("Chọn bảng cần hiển thị:");
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        cbChooseTable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SACH", "NGUOIMUON", "PHIEUMUON" }));
        cbChooseTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbChooseTableActionPerformed(evt);
            }
        });

        btnDisplayTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDisplayTable.setText("Hiển thị bảng");
        btnDisplayTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayTableActionPerformed(evt);
            }
        });

        btnThoat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnChiTietBangLayout = new javax.swing.GroupLayout(pnChiTietBang);
        pnChiTietBang.setLayout(pnChiTietBangLayout);
        pnChiTietBangLayout.setHorizontalGroup(
            pnChiTietBangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChiTietBangLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbChooseTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
            .addGroup(pnChiTietBangLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(pnChiTietBangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDisplayTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThoat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnChiTietBangLayout.setVerticalGroup(
            pnChiTietBangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChiTietBangLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(pnChiTietBangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbChooseTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnDisplayTable, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnDanhSach.setBackground(new java.awt.Color(255, 255, 255));
        pnDanhSach.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh Sách", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        tableChoose.setAutoCreateRowSorter(true);
        tableChoose.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã sách", "Tên sách", "Tác giả", "Thể loại", "Nhà xuất bản", "Năm xuất bản", "Số lượng", "Trạng thái"
            }
        ));
        jScrollPane4.setViewportView(tableChoose);

        javax.swing.GroupLayout pnDanhSachLayout = new javax.swing.GroupLayout(pnDanhSach);
        pnDanhSach.setLayout(pnDanhSachLayout);
        pnDanhSachLayout.setHorizontalGroup(
            pnDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 813, Short.MAX_VALUE)
        );
        pnDanhSachLayout.setVerticalGroup(
            pnDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
        );

        pnBackUp.setBackground(new java.awt.Color(255, 255, 255));
        pnBackUp.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Backup/Restore", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        btnReadFile.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnReadFile.setText("Khôi phục dữ liệu");
        btnReadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadFileActionPerformed(evt);
            }
        });

        lbDuongDan.setEditable(false);
        lbDuongDan.setForeground(new java.awt.Color(153, 153, 153));
        lbDuongDan.setText("Chọn đường dẫn lưu file");
        lbDuongDan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbDuongDanActionPerformed(evt);
            }
        });

        lbFile.setEditable(false);
        lbFile.setForeground(new java.awt.Color(153, 153, 153));
        lbFile.setText("Chọn file .bak để khôi phục");

        btnWriteFile.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnWriteFile.setText("Tạo file backup");
        btnWriteFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWriteFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnBackUpLayout = new javax.swing.GroupLayout(pnBackUp);
        pnBackUp.setLayout(pnBackUpLayout);
        pnBackUpLayout.setHorizontalGroup(
            pnBackUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBackUpLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnBackUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnWriteFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReadFile, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnBackUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbDuongDan)
                    .addComponent(lbFile, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnBackUpLayout.setVerticalGroup(
            pnBackUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBackUpLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pnBackUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDuongDan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnWriteFile))
                .addGap(47, 47, 47)
                .addGroup(pnBackUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReadFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnChiTietBang, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnBackUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(pnDanhSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnBackUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnChiTietBang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addComponent(pnDanhSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbChooseTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbChooseTableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbChooseTableActionPerformed

    private void btnDisplayTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayTableActionPerformed
        // TODO add your handling code here:
        String selected = cbChooseTable.getSelectedItem().toString();
        DefaultTableModel subModel;
        subModel = new DefaultTableModel();

        switch(selected){
            case "SACH" -> {
                subModel.addColumn("Mã sách");
                subModel.addColumn("Tên sách");
                subModel.addColumn("Tác giả");
                subModel.addColumn("Thể loại");
                subModel.addColumn("Nhà xuất bản");
                subModel.addColumn("Năm xuất bản");
                subModel.addColumn("Số lượng");
                subModel.addColumn("Trạng thái");
                
                for(Sach s: dsSach){
                    String tinhTrang = "Không hoạt động";
                    if(s.getTinhTrang() == 1){
                        tinhTrang = "Đang hoạt động";
                    }
                    subModel.addRow(new Object[]{
                        s.getMaSach().trim(),
                        s.getTenSach().trim(),
                        s.getTacGia().trim(),
                        s.getTheLoai(),
                        s.getNhaXuatBan(),
                        s.getNamXuatBan(),
                        s.getSoLuong(),
                        tinhTrang
                    });
                }
                tableChoose.setModel(subModel);
            }
            case "NGUOIMUON" -> {
                subModel.addColumn("Mã người mượn");
                subModel.addColumn("Họ tên");
                subModel.addColumn("Giới tính");
                subModel.addColumn("Địa chỉ");
                subModel.addColumn("Số điện thoại");
                subModel.addColumn("Email");
                
                for(NguoiMuon nm: dsNguoiMuon){
                    subModel.addRow(new Object[]{
                        nm.getMaNguoiMuon().trim(),
                        nm.getHoTen().trim(),
                        nm.getGioiTinh().trim(),
                        nm.getDiaChi(),
                        nm.getSoDienThoai(),
                        nm.getEmail()
                    });
                }
                tableChoose.setModel(subModel);
            }
            case "PHIEUMUON" -> {
                subModel.addColumn("Mã phiếu mượn");
                subModel.addColumn("Mã sách");
                subModel.addColumn("Mã người mượn");
                subModel.addColumn("Số lượng");
                subModel.addColumn("Ngày mượn");
                subModel.addColumn("Ngày trả");
                subModel.addColumn("Tình trạng");
                subModel.addColumn("Số lần gia hạn");
                
                for(PhieuMuon pm: dsPhieuMuon){
                    subModel.addRow(new Object[]{
                        pm.getMaPhieuMuon().trim(),
                        pm.getMaSach().trim(),
                        pm.getMaNguoiMuon().trim(),
                        pm.getSoLuong(),
                        pm.getNgayMuon(),
                        pm.getNgayTra(),
                        pm.getTinhTrang(),
                        pm.getSoLanGiaHan()
                    });
                }
                tableChoose.setModel(subModel);
            }
        }
    }//GEN-LAST:event_btnDisplayTableActionPerformed

    private void btnReadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadFileActionPerformed
        // TODO add your handling code here:
        JFileChooser choose = new JFileChooser();
        choose.showOpenDialog(null);
        File f = choose.getSelectedFile();
        try{
            file = f.getAbsolutePath();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Chưa chọn file backup");
        }
        lbFile.setText(file);
        LogicBackupRestore bk = new LogicBackupRestore();
        try{
            if(bk.restore(file) != 0){
                JOptionPane.showMessageDialog(this, "Khôi phục dữ liệu thành công");
            }
            else{
                JOptionPane.showMessageDialog(this, "Khôi phục dữ liệu không thành công, lỗi không xác định");
            }
        }catch(InvalidDataException iDE){
            JOptionPane.showMessageDialog(this, iDE.getMessage());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Lỗi không xác định: " + e.getMessage());
        }
    }//GEN-LAST:event_btnReadFileActionPerformed

    private void lbDuongDanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbDuongDanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lbDuongDanActionPerformed

    private void btnWriteFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWriteFileActionPerformed
        // TODO add your handling code here:
        JFileChooser choose = new JFileChooser();
        choose.showOpenDialog(null);
        File f = choose.getCurrentDirectory();
        duongDan = f.getAbsolutePath();
        lbDuongDan.setText(duongDan);
        LogicBackupRestore bk = new LogicBackupRestore();
        try{
            if(bk.backup(duongDan) == 1){
                JOptionPane.showMessageDialog(this, "Tạo file backup thành công");
            }
            else{
                JOptionPane.showMessageDialog(this, "Tạo file backup không thành công, lỗi không xác định");
            }
        }catch(InvalidDataException iDE){
            JOptionPane.showMessageDialog(this, iDE.getMessage());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Lỗi không xác định: " + e.getMessage());
        }
    }//GEN-LAST:event_btnWriteFileActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnThoatActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDisplayTable;
    private javax.swing.JButton btnReadFile;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnWriteFile;
    private javax.swing.JComboBox<String> cbChooseTable;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField lbDuongDan;
    private javax.swing.JTextField lbFile;
    private javax.swing.JPanel pnBackUp;
    private javax.swing.JPanel pnChiTietBang;
    private javax.swing.JPanel pnDanhSach;
    private javax.swing.JTable tableChoose;
    // End of variables declaration//GEN-END:variables
}
